use super::position::Position;

// blocks
// NOTE: these properties are not comprehensive; see block behaviors for more details
/// default block, represents absence
pub const TYPE_AIR: u8 = 0;
/// flows downward, causes erosion, solidifies lava, evaporates to steam
pub const TYPE_WATER: u8 = 1;
/// flows upwards, creates clouds, condenses to water
pub const TYPE_STEAM: u8 = 2;
/// basic block, doesn't do much
pub const TYPE_DIRT: u8 = 3;
/// allows plants to grow
pub const TYPE_MUD: u8 = 4;
/// devoid of life and water, unstable
pub const TYPE_SAND: u8 = 5;
/// generated by hotspot, solidifies into stone, melts things nearby
pub const TYPE_LAVA: u8 = 6;
/// strong material for building, can erode into dirt
pub const TYPE_STONE: u8 = 7;
/// replenishable building and crafting material. Is flammable
pub const TYPE_WOOD: u8 = 8;
/// grows from trees, can produce fruit
pub const TYPE_LEAVES: u8 = 9;
/// grows from leaves, break it for food, starts a new tree if on mud
pub const TYPE_SEED: u8 = 10;
/// center of a kingdom, don't let the ill get to it
pub const TYPE_SHRINE: u8 = 11;
/// only teammates of the placer can go through it
pub const TYPE_DOOR: u8 = 12;
/// shoots a projectile at an arc to destroy blocks or ill
pub const TYPE_CANNON: u8 = 13;
/// destroys wood, leaves, steam, seeds, spreads rapidly
pub const TYPE_FIRE: u8 = 14;
/// placeholder
pub const TYPE_TBD: u8 = 15;

// these directions are combined with the above block kinds to create the data
// for the block type
/// up
pub const DIR_U: u8 = 16;
/// down
pub const DIR_D: u8 = 32;
/// north
pub const DIR_N: u8 = 48;
/// east
pub const DIR_E: u8 = 64;
/// south
pub const DIR_S: u8 = 80;
/// west
pub const DIR_W: u8 = 96;

#[derive(Default, Clone, Copy)]
pub struct Block {
    /// the type and rotation of the block
    /// the four least significant bits (2^0 through 2^3) represent the type of block
    /// the four most significant bits (2^4 through 2^7) represent its rotation
    pub data: u8,
}

impl Block {
    pub fn new(data: u8) -> Block {
        Block { data }
    }
}

pub struct BlockUpdate {
    pub pos: Position,
    pub new_data: u8,
}